#!/bin/sh

# Focused window title indicator
# Shows the title of the currently focused window
# Works with both i3 and sway (subscriber mode)

# === HANDLE MOUSE CLICKS ===
# Button 2: Edit this script
case $BLOCK_BUTTON in
2) "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

# === DETECT WINDOW MANAGER ===
# Check if sway is running
if [ -n "$SWAYSOCK" ]; then
    WM_MSG="swaymsg"
# Check if i3 is running
elif command -v i3-msg >/dev/null 2>&1 && i3-msg -t get_version >/dev/null 2>&1; then
    WM_MSG="i3-msg"
else
    echo "Not running a supported WM"
    exit 0
fi

# === CONFIGURATION ===
MAX_LEN=${1:-100}

# === FORMAT FUNCTION ===
format_title() {
    while IFS= read -r title; do
        echo "Debug: $title"
        title=${title:-}

        if [ ${#title} -gt "$MAX_LEN" ]; then
            title=$(printf '%s' "$title" | cut -c1-$((MAX_LEN - 3)))"..."
        fi

        printf '%s\n' "$title"
    done
}

# === GET INITIAL STATE ===
# Get currently focused window title (only actual windows, not workspaces)
INITIAL_QUERY='.. | select(.focused? == true and .window? != null) | .name // empty'
$WM_MSG -t get_tree | jq -r "$INITIAL_QUERY" | format_title

# === SUBSCRIBE TO CHANGES ===
# Subscribe query: get name when container is focused and event is focus or title change
# TODO: Fix when changing from empty workspace to one with a window no title appears,
# think event that removes workspace hits after title get update empty workspace -> window workspace (Event to update title) -> empty workspace destroyed (Event to update title)
QUERY='.container?.name // ""'
exec $WM_MSG -m -t subscribe '["window", "workspace"]' | jq --unbuffered -r "$QUERY" | format_title
